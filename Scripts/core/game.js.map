{"version":3,"sources":["core/game.ts"],"names":["init","onResize","addControl","addStatsObject","gameLoop","setupRenderer","setupCamera"],"mappings":"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","file":"core/game.js","sourcesContent":["/// <reference path=\"_reference.ts\"/>\n\n// MAIN GAME FILE\n\n// THREEJS Aliases\nimport Scene = THREE.Scene;\nimport Renderer = THREE.Renderer;\nimport WebGLRenderer = THREE.WebGLRenderer;\nimport CanvasRenderer = THREE.CanvasRenderer;\nimport Camera = THREE.Camera;\nimport PerspectiveCamera = THREE.PerspectiveCamera;\nimport OrthographicCamera = THREE.OrthographicCamera;\nimport BoxGeometry = THREE.BoxGeometry;\nimport CubeGeometry = THREE.CubeGeometry;\nimport PlaneGeometry = THREE.PlaneGeometry;\nimport SphereGeometry = THREE.SphereGeometry;\nimport Geometry = THREE.Geometry;\nimport AxisHelper = THREE.AxisHelper;\nimport CameraHelper = THREE.CameraHelper;\nimport LambertMaterial = THREE.MeshLambertMaterial;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\nimport MeshDepthMaterial = THREE.MeshDepthMaterial;\nimport Material = THREE.Material;\nimport Texture = THREE.Texture;\nimport RepeatWrapping = THREE.RepeatWrapping;\nimport Mesh = THREE.Mesh;\nimport Object3D = THREE.Object3D;\nimport SpotLight = THREE.SpotLight;\nimport PointLight = THREE.PointLight;\nimport AmbientLight = THREE.AmbientLight;\nimport DirectionalLight = THREE.DirectionalLight;\nimport HemisphereLight = THREE.HemisphereLight;\nimport Control = objects.Control;\nimport GUI = dat.GUI;\nimport Color = THREE.Color;\nimport Vector3 = THREE.Vector3;\nimport Face3 = THREE.Face3;\nimport Point = objects.Point;\nimport Fog = THREE.Fog;\nimport LensFlare = THREE.LensFlare;\nimport AdditiveBlending = THREE.AdditiveBlending;\n\n//Custom Game Objects\nimport gameObject = objects.gameObject;\n\nvar scene: Scene;\nvar renderer: Renderer;\nvar webGLRenderer: WebGLRenderer;\nvar canvasRenderer: CanvasRenderer;\nvar camera: PerspectiveCamera;\nvar axes: AxisHelper;\nvar directionalLightHelper: CameraHelper;\nvar cube: Mesh;\nvar plane: Mesh;\nvar sphere: Mesh;\nvar ambientLight: AmbientLight;\nvar ambientColour: string;\nvar spotLight: SpotLight;\nvar directionalLight: DirectionalLight;\nvar pointColour: string;\nvar pointLight: PointLight;\nvar hemiLight: HemisphereLight;\nvar control: Control;\nvar gui: GUI;\nvar stats: Stats;\nvar step: number = 0;\nvar invert: number = 1;\nvar phase: number = 0;\nvar target: Object3D;\nvar stopMovingLight: boolean = false;\nvar planeMaterial: LambertMaterial;\nvar planeGeometry: PlaneGeometry;\nvar cubeMaterial: LambertMaterial;\nvar cubeGeometry: CubeGeometry;\nvar sphereMaterial: LambertMaterial;\nvar sphereGeometry: SphereGeometry;\nvar sphereLight: SphereGeometry;\nvar sphereLightMaterial: MeshBasicMaterial;\nvar sphereLightMesh: Mesh;\nvar groundGeometry: PlaneGeometry;\nvar groundMaterial: MeshBasicMaterial;\nvar groundMesh: Mesh;\nvar meshMaterial: MeshBasicMaterial;\nvar overrideMaterial: MeshDepthMaterial;\n\nfunction init() {\n    // Instantiate a new Scene object\n    scene = new Scene();\n    scene.overrideMaterial = new MeshDepthMaterial();\n\n    setupRenderer(); // setup the default renderer\n\t\n    setupCamera(); // setup the camera\n    \n    // add controls\n    gui = new GUI();\n    control = new Control(camera.near, camera.far, 0.02, scene.children.length);\n    addControl(control);\n\n    // Add framerate stats\n    addStatsObject();\n    console.log(\"Added Stats to scene...\");\n\n    document.body.appendChild(renderer.domElement);\n    gameLoop(); // render the scene\t\n    \n    window.addEventListener('resize', onResize, false);\n}\n\n// Change the Camera Aspect Ratio according to Screen Size changes\nfunction onResize(): void {\n    if (camera instanceof PerspectiveCamera) {\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n    }\n    renderer.setSize(window.innerWidth, window.innerHeight);\n}\n\nfunction addControl(controlObject: Control): void {\n    gui.add(controlObject, 'rotationSpeed', 0, 0.5);\n    gui.add(controlObject, 'addCube');\n    gui.add(controlObject, 'removeCube');\n    gui.add(controlObject, 'cameraNear', 0, 50).onChange(function(near) {\n        camera.near = near;\n    })\n    gui.add(controlObject, 'cameraFar', 50, 200).onChange(function(far) {\n        camera.far = far;\n    });\n}\n\n// Add Stats Object to the Scene\nfunction addStatsObject() {\n    stats = new Stats();\n    stats.setMode(0);\n    stats.domElement.style.position = 'absolute';\n    stats.domElement.style.left = '0px';\n    stats.domElement.style.top = '0px';\n    document.body.appendChild(stats.domElement);\n}\n\n// Setup main game loop\nfunction gameLoop(): void {\n    stats.update();\n\n    // rotate the cubes around its axes\n    scene.traverse(function(shape) {\n        if (shape instanceof THREE.Mesh) {\n            shape.rotation.x += control.rotationSpeed;\n            shape.rotation.y += control.rotationSpeed;\n            shape.rotation.z += control.rotationSpeed;\n        }\n    });\n    \n    // render using requestAnimationFrame\n    requestAnimationFrame(gameLoop);\n\t\n    // render the scene\n    renderer.render(scene, camera);\n}\n\n// Setup default renderer\nfunction setupRenderer(): void {\n    // setup WebGLRenderer\n    webGLRenderer = new WebGLRenderer();\n    webGLRenderer.setClearColor(0x000000, 1.0);\n    webGLRenderer.setSize(window.innerWidth, window.innerHeight);\n    webGLRenderer.shadowMap.enabled = true;\n    console.log(\"Finished setting up WebGLRenderer...\");\n    \n    // setup CanvasRenderer\n    /*\n    canvasRenderer = new CanvasRenderer();\n    canvasRenderer.setSize(window.innerWidth, window.innerHeight);\n    console.log(\"Finished setting up CanvasRenderer...\");\n    */\n\n    renderer = webGLRenderer;\n\n}\n\n// Setup main camera for the scene\nfunction setupCamera(): void {\n    camera = new PerspectiveCamera(45, window.innerWidth / window.innerHeight, 10, 130);\n    camera.position.x = -50;\n    camera.position.y = 40;\n    camera.position.z = 50;\n    camera.lookAt(scene.position);\n    console.log(\"Finished setting up Initial Camera...\");\n}\n"],"sourceRoot":"/source/"}